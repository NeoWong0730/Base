// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: global.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Packet {

  #region Enums
  /// <summary>
  /// error, 全局公共错误定义0-2000
  /// </summary>
  public enum Error {
    None = 0,
    /// <summary>
    /// 全局独立于具体协议的
    /// </summary>
    PktAllocFail = 1,
    /// <summary>
    /// 消息打包失败
    /// </summary>
    PktPackFail = 2,
    /// <summary>
    /// 消息解包失败
    /// </summary>
    PktUnPackFail = 3,
    /// <summary>
    /// 角色链接未找到
    /// </summary>
    ConnNotFound = 4,
    /// <summary>
    /// 参数不正确
    /// </summary>
    ParamInvalid = 5,
    /// <summary>
    /// shm
    /// </summary>
    ShmNull = 6,
    /// <summary>
    /// 表格加载失败
    /// </summary>
    InfoLoadFail = 7,
    /// <summary>
    /// 表格检查失败
    /// </summary>
    InfoCheckFail = 8,
    /// <summary>
    /// 内存不足
    /// </summary>
    MemNotEnough = 9,
    /// <summary>
    /// 同步队列满
    /// </summary>
    SyncReqQueueFull = 10,
    SyncResQueueEmpty = 11,
    SyncNetQueueFail = 12,
    SyncLogicQueueFail = 13,
    /// <summary>
    /// 注册定时器失败
    /// </summary>
    TimerRegFail = 15,
    /// <summary>
    /// 注册db回调失败
    /// </summary>
    DbRegFail = 16,
    /// <summary>
    /// 注册事件失败
    /// </summary>
    EventRegFail = 17,
    /// <summary>
    /// 该模块已经被关闭
    /// </summary>
    LogicClosed = 18,
    /// <summary>
    /// 动态logic加载失败
    /// </summary>
    LogicLoadFail = 19,
    /// <summary>
    /// 非法请求
    /// </summary>
    InvalidReq = 20,
    /// <summary>
    /// 数据错误
    /// </summary>
    DataError = 21,
    /// <summary>
    /// http request注册回调失败
    /// </summary>
    HttpRequestRegFail = 22,
    /// <summary>
    ///game宕机
    /// </summary>
    GserverCrash = 24,
    /// <summary>
    /// db表未找到
    /// </summary>
    DbTableNotFound = 51,
    /// <summary>
    /// 玩家连接状态不正确
    /// </summary>
    ConnStatusFail = 52,
    /// <summary>
    ///db链接不可用
    /// </summary>
    DbInvalid = 53,
    /// <summary>
    ///db请求参数错误
    /// </summary>
    DbReqParamError = 54,
    /// <summary>
    /// 初始化失败
    /// </summary>
    ScriptInitFail = 61,
    /// <summary>
    /// 加载脚本文件失败
    /// </summary>
    ScriptLoadFail = 62,
    /// <summary>
    /// 调用脚本函数失败
    /// </summary>
    ScriptCallFail = 63,
    RoleIsInBattle = 64,
    /// <summary>
    /// redis连接错误
    /// </summary>
    RedisConnectError = 101,
    /// <summary>
    /// 邮件id已存在
    /// </summary>
    MailIdExist = 201,
    /// <summary>
    /// 角色逻辑模块空
    /// </summary>
    LogicRoleNull = 1001,
    /// <summary>
    /// 登录模块空
    /// </summary>
    LogicLoginNull = 1002,
    /// <summary>
    /// 帐号模块
    /// </summary>
    LogicAccountNull = 1003,
    LogicIdNull = 1004,
    /// <summary>
    /// 属性模块
    /// </summary>
    LogicAttrNull = 1005,
    /// <summary>
    /// 道具模块
    /// </summary>
    LogicItemNull = 1006,
    /// <summary>
    /// GM模块
    /// </summary>
    LogicGmNull = 1007,
    /// <summary>
    /// 地图
    /// </summary>
    LogicMapNull = 1008,
    /// <summary>
    /// 宠物
    /// </summary>
    LogicPetNull = 1009,
    /// <summary>
    /// 任务模块
    /// </summary>
    LogicTaskNull = 1010,
    /// <summary>
    /// 战斗模块
    /// </summary>
    LogicBattleNull = 1011,
    /// <summary>
    /// 组队模块
    /// </summary>
    LogicTeamNull = 1012,
    /// <summary>
    /// 离线
    /// </summary>
    LogicRoleOffLineNull = 1013,
    /// <summary>
    /// 挂机模块
    /// </summary>
    LogicHangUpNull = 1014,
    /// <summary>
    /// 掉落奖励模块
    /// </summary>
    LogicDropRewardNull = 1015,
    /// <summary>
    /// 技能模块
    /// </summary>
    LogicSkillNull = 1016,
    /// <summary>
    /// misc模块
    /// </summary>
    LogicMiscNull = 1017,
    /// <summary>
    /// 宝藏模块
    /// </summary>
    LogicTreasureNull = 1018,
    /// <summary>
    /// 时装模块
    /// </summary>
    LogicFashion = 1019,
    /// <summary>
    /// 副本模块
    /// </summary>
    LogicInstanceNull = 1020,
    /// <summary>
    /// 排行榜
    /// </summary>
    LogicRankNull = 1021,
    /// <summary>
    /// 切磋模块
    /// </summary>
    LogicCompareNotesNull = 1022,
    /// <summary>
    /// 天赋模块
    /// </summary>
    LogicTalentNull = 1023,
    /// <summary>
    /// 道具模块
    /// </summary>
    LogicLifeSkillNull = 1024,
    /// <summary>
    /// 商店模块
    /// </summary>
    LogicShopNull = 1025,
    LogicWeatherNull = 1026,
    /// <summary>
    /// 称号模块
    /// </summary>
    LogicTitle = 1027,
    /// <summary>
    /// 能量晶石
    /// </summary>
    LogicPowerStoneNull = 1028,
    /// <summary>
    /// 匹配模块
    /// </summary>
    LogicMatchNull = 1029,
    /// <summary>
    /// 竞技场模块
    /// </summary>
    LogicArenaNull = 1030,
    /// <summary>
    /// 声望模块
    /// </summary>
    LogicReputationNull = 1031,
    /// <summary>
    /// pay模块
    /// </summary>
    LogicPayNull = 1032,
    /// <summary>
    /// 魔力宝典
    /// </summary>
    LogicMagicDict = 1033,
    /// <summary>
    /// 活跃度
    /// </summary>
    LogicActivityNull = 1034,
    /// <summary>
    /// 邮件模块
    /// </summary>
    LogicMailNull = 1035,
    /// <summary>
    /// 封号禁言模块
    /// </summary>
    LogicBanNull = 1036,
    /// <summary>
    /// 没有埋点模块
    /// </summary>
    LogicBuriedPoint = 1037,
    /// <summary>
    /// 烹饪
    /// </summary>
    LogicCook = 1038,
    /// <summary>
    /// 聊天模块
    /// </summary>
    LogicSocialNull = 1039,
    /// <summary>
    /// 七日登录
    /// </summary>
    LogicSevenDayNull = 1040,
    /// <summary>
    /// 冒险家手册
    /// </summary>
    LogicAdventureNull = 1041,
    /// <summary>
    /// 头像框模块
    /// </summary>
    LogicHeadFrameNull = 1042,
    /// <summary>
    /// 充值
    /// </summary>
    LogicChargeNull = 1043,
    /// <summary>
    /// 交易模块
    /// </summary>
    LogicTradeNull = 1044,
    /// <summary>
    /// 机器人模块
    /// </summary>
    LogicRobotNull = 1045,
    /// <summary>
    /// 生存竞技场
    /// </summary>
    LogicSurvivalNull = 1046,
    /// <summary>
    /// 每日签到
    /// </summary>
    LogicDailySignNull = 1047,
    /// <summary>
    /// 装备模块
    /// </summary>
    LogicEquipNull = 1048,
    /// <summary>
    /// 安全锁模块
    /// </summary>
    LogicSecureLockNull = 1049,
    /// <summary>
    /// 王国战令
    /// </summary>
    LogicBattlePassNull = 1050,
    /// <summary>
    /// 活动进度
    /// </summary>
    LogicActivityTargetNull = 1051,
    /// <summary>
    /// 每日礼包
    /// </summary>
    LogicDailyGiftNull = 1052,
    /// <summary>
    /// 家族兽
    /// </summary>
    LogicGuildPetNull = 1053,
    /// <summary>
    /// 家族拍卖
    /// </summary>
    LogicGuildAuctionNull = 1054,
    /// <summary>
    /// GMT跑马灯
    /// </summary>
    LogicGmtmarqueeNull = 1055,
    /// <summary>
    /// 家族
    /// </summary>
    LogicGuildNull = 1056,
    /// <summary>
    /// 限时礼包
    /// </summary>
    LogicLimitGiftNull = 1057,
    /// <summary>
    /// 红包活动
    /// </summary>
    LogicRedEnvelopeActivityNull = 1058,
    /// <summary>
    /// 运营活动规则
    /// </summary>
    LogicActivityRulerNull = 1059,
    /// <summary>
    /// 经验找回
    /// </summary>
    LogicCompensationNull = 1060,
    /// <summary>
    /// 夺宝活动 (法兰夺宝 王国夺宝)
    /// </summary>
    LogicFightTreasureNull = 1061,
    /// <summary>
    /// 金宠抽奖
    /// </summary>
    LogicActPetLotteryNull = 1062,
    /// <summary>
    /// 女神试炼
    /// </summary>
    LogicGoddessInstanceNull = 1063,
    /// <summary>
    /// 世界boss
    /// </summary>
    LogicWildBossNull = 1064,
    /// <summary>
    /// 勇者团
    /// </summary>
    LogicBraveGroupNull = 1065,
    /// <summary>
    /// 天梯竞技场
    /// </summary>
    LogicTianTiNull = 1066,
    /// <summary>
    /// 城镇任务
    /// </summary>
    LogicTownTaskNull = 1067,
    /// <summary>
    /// 变身
    /// </summary>
    LogicShapeShiftNull = 1068,
    /// <summary>
    /// 回归签到
    /// </summary>
    LogicBackSignInNull = 1069,
    /// <summary>
    /// 回归奖励找回
    /// </summary>
    LogicBackAwardGetNull = 1070,
    /// <summary>
    /// 试炼之门
    /// </summary>
    LogicTrialGateNull = 1071,
    /// <summary>
    /// 回归活动
    /// </summary>
    LogicActivityReturnNull = 1072,
    /// <summary>
    /// 年兽
    /// </summary>
    LogicMonsterNianNull = 1073,
    /// <summary>
    /// 法兰商队
    /// </summary>
    LogicMerchantNull = 1074,
    /// <summary>
    ///boss资格挑战赛
    /// </summary>
    LogicBossTowerNull = 1075,
  }

  public enum CmdError {
    None = 0,
    ErrorMsg = 11,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 错误通知
  /// </summary>
  public sealed class ErrorMsg : pb::IMessage {
    private static readonly pb::MessageParser<ErrorMsg> _parser = new pb::MessageParser<ErrorMsg>(() => new ErrorMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "err" field.</summary>
    public const int ErrFieldNumber = 1;
    private int err_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Err {
      get { return err_; }
      set {
        err_ = value;
      }
    }

    /// <summary>Field number for the "reqMsgType" field.</summary>
    public const int ReqMsgTypeFieldNumber = 2;
    private int reqMsgType_;
    /// <summary>
    /// 对应请求的消息号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqMsgType {
      get { return reqMsgType_; }
      set {
        reqMsgType_ = value;
      }
    }

    /// <summary>Field number for the "reqData" field.</summary>
    public const int ReqDataFieldNumber = 3;
    private pb::ByteString reqData_ = pb::ByteString.Empty;
    /// <summary>
    /// 对应请求的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReqData {
      get { return reqData_; }
      set {
        reqData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Err != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Err);
      }
      if (ReqMsgType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReqMsgType);
      }
      if (ReqData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ReqData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Err != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Err);
      }
      if (ReqMsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqMsgType);
      }
      if (ReqData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReqData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Err = input.ReadInt32();
            break;
          }
          case 16: {
            ReqMsgType = input.ReadInt32();
            break;
          }
          case 26: {
            ReqData = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
