// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chatmsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Packet {

  #region Messages
  public sealed class ChatExtMsgVoice : pb::IMessage {
    private static readonly pb::MessageParser<ChatExtMsgVoice> _parser = new pb::MessageParser<ChatExtMsgVoice>(() => new ChatExtMsgVoice());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatExtMsgVoice> Parser { get { return _parser; } }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 1;
    private int duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "fileID" field.</summary>
    public const int FileIDFieldNumber = 2;
    private pb::ByteString fileID_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileID {
      get { return fileID_; }
      set {
        fileID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hitFlag" field.</summary>
    public const int HitFlagFieldNumber = 3;
    private int hitFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HitFlag {
      get { return hitFlag_; }
      set {
        hitFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Duration != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Duration);
      }
      if (FileID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FileID);
      }
      if (HitFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HitFlag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (FileID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileID);
      }
      if (HitFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitFlag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Duration = input.ReadInt32();
            break;
          }
          case 18: {
            FileID = input.ReadBytes();
            break;
          }
          case 24: {
            HitFlag = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class ItemCommonData : pb::IMessage {
    private static readonly pb::MessageParser<ItemCommonData> _parser = new pb::MessageParser<ItemCommonData>(() => new ItemCommonData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemCommonData> Parser { get { return _parser; } }

    /// <summary>Field number for the "boxId" field.</summary>
    public const int BoxIdFieldNumber = 1;
    private int boxId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoxId {
      get { return boxId_; }
      set {
        boxId_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private ulong uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private uint position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private uint count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 6;
    private uint quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "new" field.</summary>
    public const int NewFieldNumber = 7;
    private bool new_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool New {
      get { return new_; }
      set {
        new_ = value;
      }
    }

    /// <summary>Field number for the "bind" field.</summary>
    public const int BindFieldNumber = 8;
    private bool bind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bind {
      get { return bind_; }
      set {
        bind_ = value;
      }
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 9;
    private global::Packet.Equipment equipment_;
    /// <summary>
    /// 如果是装备, 则填充这个字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.Equipment Equipment {
      get { return equipment_; }
      set {
        equipment_ = value;
      }
    }

    /// <summary>Field number for the "essence" field.</summary>
    public const int EssenceFieldNumber = 10;
    private global::Packet.Essence essence_;
    /// <summary>
    /// 如果是淬炼精华, 则填充这个字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.Essence Essence {
      get { return essence_; }
      set {
        essence_ = value;
      }
    }

    /// <summary>Field number for the "crystal" field.</summary>
    public const int CrystalFieldNumber = 11;
    private global::Packet.Crystal crystal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.Crystal Crystal {
      get { return crystal_; }
      set {
        crystal_ = value;
      }
    }

    /// <summary>Field number for the "petUnit" field.</summary>
    public const int PetUnitFieldNumber = 12;
    private global::Packet.PetUnit petUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.PetUnit PetUnit {
      get { return petUnit_; }
      set {
        petUnit_ = value;
      }
    }

    /// <summary>Field number for the "srcUIId" field.</summary>
    public const int SrcUIIdFieldNumber = 13;
    private uint srcUIId_;
    /// <summary>
    ///来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SrcUIId {
      get { return srcUIId_; }
      set {
        srcUIId_ = value;
      }
    }

    /// <summary>Field number for the "teamTalk" field.</summary>
    public const int TeamTalkFieldNumber = 14;
    private pb::ByteString teamTalk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TeamTalk {
      get { return teamTalk_; }
      set {
        teamTalk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ornament" field.</summary>
    public const int OrnamentFieldNumber = 15;
    private global::Packet.Ornament ornament_;
    /// <summary>
    /// 饰品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.Ornament Ornament {
      get { return ornament_; }
      set {
        ornament_ = value;
      }
    }

    /// <summary>Field number for the "petEquip" field.</summary>
    public const int PetEquipFieldNumber = 16;
    private global::Packet.PetEquip petEquip_;
    /// <summary>
    ///宠物装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Packet.PetEquip PetEquip {
      get { return petEquip_; }
      set {
        petEquip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoxId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BoxId);
      }
      if (Uuid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Uuid);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Id);
      }
      if (Position != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Position);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Count);
      }
      if (Quality != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Quality);
      }
      if (New != false) {
        output.WriteRawTag(56);
        output.WriteBool(New);
      }
      if (Bind != false) {
        output.WriteRawTag(64);
        output.WriteBool(Bind);
      }
      if (equipment_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Equipment);
      }
      if (essence_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Essence);
      }
      if (crystal_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Crystal);
      }
      if (petUnit_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PetUnit);
      }
      if (SrcUIId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(SrcUIId);
      }
      if (TeamTalk.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(TeamTalk);
      }
      if (ornament_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Ornament);
      }
      if (petEquip_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PetEquip);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoxId);
      }
      if (Uuid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uuid);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Position);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quality);
      }
      if (New != false) {
        size += 1 + 1;
      }
      if (Bind != false) {
        size += 1 + 1;
      }
      if (equipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipment);
      }
      if (essence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Essence);
      }
      if (crystal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crystal);
      }
      if (petUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PetUnit);
      }
      if (SrcUIId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SrcUIId);
      }
      if (TeamTalk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TeamTalk);
      }
      if (ornament_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ornament);
      }
      if (petEquip_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PetEquip);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BoxId = input.ReadInt32();
            break;
          }
          case 16: {
            Uuid = input.ReadUInt64();
            break;
          }
          case 24: {
            Id = input.ReadUInt32();
            break;
          }
          case 32: {
            Position = input.ReadUInt32();
            break;
          }
          case 40: {
            Count = input.ReadUInt32();
            break;
          }
          case 48: {
            Quality = input.ReadUInt32();
            break;
          }
          case 56: {
            New = input.ReadBool();
            break;
          }
          case 64: {
            Bind = input.ReadBool();
            break;
          }
          case 74: {
            if (equipment_ == null) {
              equipment_ = new global::Packet.Equipment();
            }
            input.ReadMessage(equipment_);
            break;
          }
          case 82: {
            if (essence_ == null) {
              essence_ = new global::Packet.Essence();
            }
            input.ReadMessage(essence_);
            break;
          }
          case 90: {
            if (crystal_ == null) {
              crystal_ = new global::Packet.Crystal();
            }
            input.ReadMessage(crystal_);
            break;
          }
          case 98: {
            if (petUnit_ == null) {
              petUnit_ = new global::Packet.PetUnit();
            }
            input.ReadMessage(petUnit_);
            break;
          }
          case 104: {
            SrcUIId = input.ReadUInt32();
            break;
          }
          case 114: {
            TeamTalk = input.ReadBytes();
            break;
          }
          case 122: {
            if (ornament_ == null) {
              ornament_ = new global::Packet.Ornament();
            }
            input.ReadMessage(ornament_);
            break;
          }
          case 130: {
            if (petEquip_ == null) {
              petEquip_ = new global::Packet.PetEquip();
            }
            input.ReadMessage(petEquip_);
            break;
          }
        }
      }
    }

  }

  public sealed class AchievementData : pb::IMessage {
    private static readonly pb::MessageParser<AchievementData> _parser = new pb::MessageParser<AchievementData>(() => new AchievementData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AchievementData> Parser { get { return _parser; } }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "historyDatas" field.</summary>
    public const int HistoryDatasFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Packet.RoleAchievementHistory> _repeated_historyDatas_codec
        = pb::FieldCodec.ForMessage(26, global::Packet.RoleAchievementHistory.Parser);
    private readonly pbc::RepeatedField<global::Packet.RoleAchievementHistory> historyDatas_ = new pbc::RepeatedField<global::Packet.RoleAchievementHistory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Packet.RoleAchievementHistory> HistoryDatas {
      get { return historyDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Timestamp);
      }
      historyDatas_.WriteTo(output, _repeated_historyDatas_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      size += historyDatas_.CalculateSize(_repeated_historyDatas_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 26: {
            historyDatas_.AddEntriesFrom(input, _repeated_historyDatas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class ChatExtMsg : pb::IMessage {
    private static readonly pb::MessageParser<ChatExtMsg> _parser = new pb::MessageParser<ChatExtMsg>(() => new ChatExtMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatExtMsg> Parser { get { return _parser; } }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Packet.ItemCommonData> _repeated_item_codec
        = pb::FieldCodec.ForMessage(10, global::Packet.ItemCommonData.Parser);
    private readonly pbc::RepeatedField<global::Packet.ItemCommonData> item_ = new pbc::RepeatedField<global::Packet.ItemCommonData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Packet.ItemCommonData> Item {
      get { return item_; }
    }

    /// <summary>Field number for the "achData" field.</summary>
    public const int AchDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Packet.AchievementData> _repeated_achData_codec
        = pb::FieldCodec.ForMessage(18, global::Packet.AchievementData.Parser);
    private readonly pbc::RepeatedField<global::Packet.AchievementData> achData_ = new pbc::RepeatedField<global::Packet.AchievementData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Packet.AchievementData> AchData {
      get { return achData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
      achData_.WriteTo(output, _repeated_achData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      size += achData_.CalculateSize(_repeated_achData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
          case 18: {
            achData_.AddEntriesFrom(input, _repeated_achData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
