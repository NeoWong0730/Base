// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: move.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Client {

  #region Enums
  public enum enSecondMove {
    None = 0,
    /// <summary>
    ///单用户移动上行
    /// </summary>
    ReqSingleUserMove = 1,
    /// <summary>
    ///单用户移动下行
    /// </summary>
    NtfSingleUserMove = 2,
    /// <summary>
    ///队伍跟随成员整体移动上行
    /// </summary>
    ReqTeamFollowMove = 3,
    /// <summary>
    ///队伍跟随成员整体移动下行
    /// </summary>
    NtfTeamFollowMove = 4,
    /// <summary>
    ///实际最大
    /// </summary>
    RealMax = 5,
  }

  #endregion

  #region Messages
  public sealed class SecondMove_Req_SingleUserMove : pb::IMessage {
    private static readonly pb::MessageParser<SecondMove_Req_SingleUserMove> _parser = new pb::MessageParser<SecondMove_Req_SingleUserMove>(() => new SecondMove_Req_SingleUserMove());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecondMove_Req_SingleUserMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class SecondMove_Ntf_SingleUserMove : pb::IMessage {
    private static readonly pb::MessageParser<SecondMove_Ntf_SingleUserMove> _parser = new pb::MessageParser<SecondMove_Ntf_SingleUserMove>(() => new SecondMove_Ntf_SingleUserMove());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecondMove_Ntf_SingleUserMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class SecondMove_Req_TeamFollowMove : pb::IMessage {
    private static readonly pb::MessageParser<SecondMove_Req_TeamFollowMove> _parser = new pb::MessageParser<SecondMove_Req_TeamFollowMove>(() => new SecondMove_Req_TeamFollowMove());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecondMove_Req_TeamFollowMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class SecondMove_Ntf_TeamFollowMove : pb::IMessage {
    private static readonly pb::MessageParser<SecondMove_Ntf_TeamFollowMove> _parser = new pb::MessageParser<SecondMove_Ntf_TeamFollowMove>(() => new SecondMove_Ntf_TeamFollowMove());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecondMove_Ntf_TeamFollowMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
