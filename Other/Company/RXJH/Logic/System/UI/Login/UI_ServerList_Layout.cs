// Generated by UIComponentBinder.cs, you can't modifity it manualy!
using System;
using UnityEngine;
using UnityEngine.UI;
using Logic.Core;
using TMPro;

namespace Logic.UI {
    [Serializable]
    public partial class UI_ServerList_Layout : UILayoutBase {
        public UnityEngine.UI.Button btnClose = null; // [0] Path: "Animator/Btn_Close"
        public UnityEngine.RectTransform serverTabProto = null; // [1] Path: "Animator/Toggle_Group/Toggle"
        public UnityEngine.RectTransform serverTabProtoParent = null; // [2] Path: "Animator/Toggle_Group"
        public InfinityGrid infinityItems = null; // [3] Path: "Animator/Scroll"
        public CDText cdText = null; // [4] Path: "Animator/Remain/Remain"
        public UnityEngine.RectTransform cdNode = null; // [5] Path: "Animator/Remain"

        protected override void Loaded() {
            this.btnClose = binder.Find<UnityEngine.UI.Button>(0);
            this.serverTabProto = binder.Find<UnityEngine.RectTransform>(1);
            this.serverTabProtoParent = binder.Find<UnityEngine.RectTransform>(2);
            this.infinityItems = binder.Find<InfinityGrid>(3);
            this.cdText = binder.Find<CDText>(4);
            this.cdNode = binder.Find<UnityEngine.RectTransform>(5);
        }

#if UNITY_EDITOR
        protected override void FindByPath(UnityEngine.Transform transform, bool check = false) {
            if (!check) {
                this.btnClose = transform.Find("Animator/Btn_Close").GetComponent<UnityEngine.UI.Button>();
                this.serverTabProto = transform.Find("Animator/Toggle_Group/Toggle").GetComponent<UnityEngine.RectTransform>();
                this.serverTabProtoParent = transform.Find("Animator/Toggle_Group").GetComponent<UnityEngine.RectTransform>();
                this.infinityItems = transform.Find("Animator/Scroll").GetComponent<InfinityGrid>();
                this.cdText = transform.Find("Animator/Remain/Remain").GetComponent<CDText>();
                this.cdNode = transform.Find("Animator/Remain").GetComponent<UnityEngine.RectTransform>();
            }
            else {
                UnityEngine.Transform _t_ = null;
                _t_ = transform.Find("Animator/Btn_Close");
                this.btnClose = _t_ != null ? _t_.GetComponent<UnityEngine.UI.Button>() : null;
                _t_ = transform.Find("Animator/Toggle_Group/Toggle");
                this.serverTabProto = _t_ != null ? _t_.GetComponent<UnityEngine.RectTransform>() : null;
                _t_ = transform.Find("Animator/Toggle_Group");
                this.serverTabProtoParent = _t_ != null ? _t_.GetComponent<UnityEngine.RectTransform>() : null;
                _t_ = transform.Find("Animator/Scroll");
                this.infinityItems = _t_ != null ? _t_.GetComponent<InfinityGrid>() : null;
                _t_ = transform.Find("Animator/Remain/Remain");
                this.cdText = _t_ != null ? _t_.GetComponent<CDText>() : null;
                _t_ = transform.Find("Animator/Remain");
                this.cdNode = _t_ != null ? _t_.GetComponent<UnityEngine.RectTransform>() : null;
            }
        }
#endif

        public interface IListener {
            void OnBtnClicked_btnClose();
            void OnCreateCell_infinityItems(InfinityGridCell cell);
            void OnCellChange_infinityItems(InfinityGridCell cell, int index);
            void OnTimeRefresh_cdText(TMPro.TextMeshProUGUI text, float time, bool isEnd);
        }

        public void BindEvents(IListener listener, bool toListen = true) {
            this.btnClose.onClick.AddListener(listener.OnBtnClicked_btnClose);
            this.infinityItems.onCreateCell += listener.OnCreateCell_infinityItems;
            this.infinityItems.onCellChange += listener.OnCellChange_infinityItems;
            this.cdText.onTimeRefresh += listener.OnTimeRefresh_cdText;
        }
    }
}
